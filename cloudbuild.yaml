steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/newsletter-aggregator:v1', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/newsletter-aggregator:v1']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'newsletter-aggregator'
      - '--image=gcr.io/$PROJECT_ID/newsletter-aggregator:v1'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--timeout=600s'
      - '--cpu-boost'
      - '--set-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest'
      - '--set-env-vars=GCP_PROJECT_ID=$PROJECT_ID,GCS_BUCKET_NAME=newsletter-aggregator,USE_GCS_BACKUP=true,USE_VERTEX_AI=true,USE_CLOUD_LOGGING=true,STORAGE_BACKEND=chromadb,FLASK_ENV=production,USE_SECRET_MANAGER=true'

  # Create a tagged production version
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/$PROJECT_ID/newsletter-aggregator:v1', 'gcr.io/$PROJECT_ID/newsletter-aggregator:latest']

  # Push the latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/newsletter-aggregator:latest']

images:
  - 'gcr.io/$PROJECT_ID/newsletter-aggregator:v1'
  - 'gcr.io/$PROJECT_ID/newsletter-aggregator:latest' 