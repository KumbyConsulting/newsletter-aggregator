# cloudrun-service.yaml - Base declarative definition for the Cloud Run service

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  # The name of the Cloud Run service (Cloud Deploy will manage revisions)
  name: newsletter-aggregator
  # Annotations can be used for labels or other metadata if needed
  # annotations:
  #   cloud.googleapis.com/location: us-central1 # Location is managed by the Target
spec:
  template:
    metadata:
      annotations:
        # Scaling Configuration
        autoscaling.knative.dev/minScale: "2"
        autoscaling.knative.dev/maxScale: "15"
        # Execution Environment & Performance
        run.googleapis.com/execution-environment: "gen2"
        run.googleapis.com/cpu-boost: "true"
        run.googleapis.com/use-http2: "true"
        run.googleapis.com/cpu-throttling: "true" # true = CPU always allocated (matches --cpu-throttling)
        # Networking & Database
        # Using substitution variables for project ID and instance name
        run.googleapis.com/vpc-access-connector: "projects/newsletter-450510/locations/us-central1/connectors/newsletter-aggregator-vpc"
      # labels:
      #   app: newsletter-aggregator
    spec:
      # Using substitution for service account
      serviceAccountName: "newsletter-aggregator-sa@newsletter-450510.iam.gserviceaccount.com"
      # Tuned for optimal performance based on metrics
      containerConcurrency: 80
      timeoutSeconds: 300
      containers:
        - image: gcr.io/newsletter-450510/newsletter-aggregator:latest
          ports:
            # Port the container listens on (matches Uvicorn --port)
            - containerPort: 8080
              name: http1 # Default port for Cloud Run requests
          # Override the container's entrypoint/command
          # command:
          #   - "/bin/sh"
          # args:
          #   - "-c"
          #   # Updated command to use Waitress
          #   - >
          #     exec python -m waitress --port=$PORT --call app:app
          env:
            # Base environment variables - some will be patched by Skaffold profiles
            - name: FLASK_ENV
              value: "production" # Base value, overridden by profile patches
            - name: GCS_BUCKET_NAME
              value: "newsletter-aggregator" # Base value, overridden by profile patches
            # Other env vars from original command
            - name: USE_GCS_BACKUP
              value: "true"
            - name: USE_VERTEX_AI
              value: "true"
            - name: USE_CLOUD_LOGGING
              value: "true"
            - name: STORAGE_BACKEND
              value: "firestore"
            - name: USE_SECRET_MANAGER
              value: "true"
            - name: SKIP_CHROMADB_INIT
              value: "true"
            - name: API_GATEWAY_ENABLED
              value: "true"
            - name: PYTHONUNBUFFERED
              value: "1"
            # Remove Gunicorn settings
            - name: ENABLE_PROMETHEUS
              value: "true"
            - name: PROMETHEUS_PORT
              value: "8000"
            - name: MONITORING_ENABLED
              value: "true"
            # GCP_PROJECT_ID: Rely on GOOGLE_CLOUD_PROJECT env var available in Cloud Run runtime
            # Secret Reference
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  # *** Ensure this secret exists in Secret Manager ***
                  name: GEMINI_API_KEY
                  key: "latest" # Or a specific version

          resources:
            limits:
              # Optimized resource allocation based on metrics
              memory: "4Gi"
              cpu: "2"
            # Adding resource requests for better scheduling
            requests:
              memory: "2Gi"
              cpu: "1"
  # Traffic routing - send 100% to the latest ready revision
  traffic:
    - percent: 100
      latestRevision: true 